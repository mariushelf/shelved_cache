name: CI/CD

on: # events that trigger our pipeline: push on any branch and release creation
  push:
  release:
    types: [published]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"  # lowest supported version
      - name: Install dependencies
        run: pip install pre-commit
      - name: Run pre-commit hooks
        run: pre-commit run --all-files
  test:
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"
          - "3.13"
          - "pypy-3.9"
        platform: [ubuntu-latest, macos-latest, windows-latest]
        exclude:
            - python-version: "3.13"
              platform: windows-latest  # permission errors in this combination
    runs-on: ${{ matrix.platform }}
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      # windows runners can be a bit moody here, so we retry this
      uses: nick-fields/retry@v2
      with:
        max_attempts: 3
        timeout_minutes: 5
        command: |
          pip install poetry
          poetry install
    - name: Run pytest
      run: |
        poetry run pytest --cov-report=xml --cov=shelved_cache tests
    - name: "Upload coverage to Codecov"
      uses: codecov/codecov-action@v3
      with:
        fail_ci_if_error: false
#        token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
  build-n-publish:
    environment: production
    name: Build and publish Python distributions to PyPI
    needs:
      - test
      - lint
    if: github.event_name == 'release' && github.event.action == 'published'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
    - name: Install poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        export PATH=$PATH:$HOME/.local/bin
    - name: Check tag and version match
      run: |
        if [ "`poetry version -s`" != "${{ github.ref_name }}" ]; then
          echo Tag ${{ github.ref_name }} does not match package version `poetry version -s`.
          exit 1
        else
          echo Package version and tag match.
        fi
    - name: Build package
      run: poetry build
    - name: Publish package to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
