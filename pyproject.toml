[tool.poetry]
name = "shelved_cache"
version = "0.4.0"
description = "Persistent cache for Python cachetools."
authors = ["Marius Helf <helfsmarius@gmail.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/mariushelf/shelved_cache"
repository = "https://github.com/mariushelf/shelved_cache"
documentation = "https://github.com/mariushelf/shelved_cache"
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: Implementation :: PyPy"
]

[tool.poetry.dependencies]
python = "^3.9.0,<4"
cachetools = "^4.2.2|^5.0.0"

[tool.poetry.group.dev.dependencies]
pre-commit = "^2.8.0"
tox = "^4.4.5"
twine = "^4.0.0"
pytest = "^7.1.1"
pytest-asyncio = "^0.20.3"
pytest-cov = "^4.0.0"

[tool.isort]
profile = "black"
multi_line_output = 3

[build-system]
requires = ["poetry-core>=1.4"]
build-backend = "poetry.core.masonry.api"

# pytest configuration
[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--doctest-modules --doctest-continue-on-failure -rA --cov=shelved_cache --cov-report term --cov-report xml:coverage.xml --junitxml=report.xml"
testpaths = [
    "tests",
    "shelved_cache",
]

[tool.ruff]
select = [
#    "ANN",  # flake8-annotations
    "E",  # flake8
    "F",  # flake8
    "I",  # isort
    #    "D",  # pydocstyle
    "S",  # flake8-bandit
    "NPY",  # numpy-specific rules
    "RUF",  # ruff specific rules
]
ignore = [
    "E501",
    "E712",

    "ANN101",  # Missing type annotation for `self` in method
    "ANN202",  # Missing return type annotation for private function
    "ANN204",  # Missing return type annotation for special function
    "ANN401",  # Dynamically typed expressions (typing.Any) are disallowed

    # pydocstyle
    "D100",  # Missing docstring in public module
    "D104",  # Missing docstring in public package
    "D106",  # Missing docstring in public nested class
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**" = ["S", "ANN"]

[tool.ruff.pydocstyle]
convention = "numpy"
